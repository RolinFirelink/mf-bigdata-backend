<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.arg.smart.web.order.mapper.OrderMapper">

    <!--统计不同运输方式的订单数量-->
    <select id="getOrderCountByTransportMode" resultType="java.util.HashMap">
	    SELECT mode_transport, COUNT(mode_transport) AS count, any_value(shipping_unit)
	    as unit FROM sh_product_circulation_data WHERE order_id IN
	    <foreach collection="list" item="order_id" open="(" close=")" separator=",">
		    #{order_id}
	    </foreach>
	    GROUP BY mode_transport;
    </select>

    <!--统计不同地域的订单收货者的下单数量-->
    <select id="getOrderAmountByArea" resultType="java.util.HashMap">
	    SELECT receiving_location, SUM(transportation_quantity) AS amount ,
	    any_value(shipping_unit) as unit FROM sh_product_circulation_data
	    WHERE order_id IN
	    <foreach collection="list" item="order_id" open="(" close=")" separator=",">
		    #{order_id}
	    </foreach>
	    GROUP BY receiving_location;
    </select>

    <!--统计不同承运商运量-->
    <select id="getOrderTransportationAmount" resultType="java.util.HashMap">
	    SELECT DISTINCT cp.company_name, sum(cir.transportation_quantity) AS amount,
	    any_value(cir.shipping_unit) as unit FROM sh_product_circulation_data AS cir
	    JOIN sh_company AS cp ON cir.company_id = cp.id WHERE cir.order_id IN
	    <foreach collection="list" item="order_id" open="(" close=")" separator=",">
		    #{order_id}
	    </foreach>
	    group by cir.company_id;
    </select>

    <!--统计不同地域某产品平均销售价格-->
    <select id="getProductAvgPriceByArea" resultType="java.util.HashMap">
	    SELECT any_value(qt.material_id) AS material_id,
	    any_value(qt.material_name) AS material_name,
	    any_value(qt.region_id) AS region_id,
	    any_value(qt.region_name) AS region_name,
	    AVG(
	    <if test="category == 1">
		    qt.production_price
	    </if>
	    <if test="category == 3">
		    qt.purchase_price
	    </if>
	    <if test="category == 4">
		    qt.wholesale_price
	    </if>
	    ) AS avg_price FROM sh_market_quotation_stat as qt
	    WHERE qt.material_id = #{material_id}
	    <if test="start_time != null">
		    AND qt.create_time &gt;= #{start_time}
	    </if>
	    <if test="end_time != null">
		    AND qt.create_time &lt;= #{end_time}
	    </if>
	    GROUP BY qt.region_id;
    </select>

    <!--统计承运商基本信息-->
    <select id="getCompanyCirculationInfo" resultType="java.util.HashMap">
        SELECT row_number() OVER () AS row_no, cp.company_name, comp.mode_transport from sh_company AS cp LEFT JOIN (
            SELECT cir.order_id, cir.mode_transport, cir.company_id FROM sh_product_circulation_data AS cir LEFT JOIN (
                SELECT id FROM sh_order WHERE flag = #{flag} AND category = #{category}
                <if test="start_time != null">
                    AND finish_time &gt;= #{start_time}
                </if>
                <if test="end_time != null">
                    AND finish_time &lt;= #{end_time}
                </if>
            ) AS oid ON cir.order_id = oid.id WHERE cir.order_id = oid.id
        ) AS comp ON cp.id = comp.company_id WHERE cp.id = comp.company_id;
    </select>

	<!--统计不同承运商运输总量，运输订单数量与运输均价-->
	<select id="getCompanyTransportInfo" resultType="java.util.HashMap">
		SELECT  any_value(cp.company_name) 	 AS company_name,
		        sum(transportation_quantity) AS sum,
				count(cir.id) 				 AS count,
				sum(transportation_price) / sum(transportation_quantity) AS avg_price,
				any_value(shipping_unit) 	 AS unit
		FROM sh_order AS order_main
		LEFT JOIN sh_order_detail AS order_detail ON order_main.id = order_detail.order_id
		LEFT JOIN sh_product_circulation_data AS cir ON order_main.id = cir.order_id
		LEFT JOIN sh_company AS cp ON cir.company_id = cp.id
		WHERE order_main.flag = #{flag}
		<if test="start_time != null">
			AND cir.receiving_time &gt;= #{start_time}
		</if>
		<if test="end_time != null">
			AND cir.receiving_time &lt;= #{end_time}
		</if>
		GROUP BY cir.company_id;
	</select>

	<!--统计订单信息列表-->
	<select id="getOrderInfo" resultType="java.util.HashMap">
		SELECT order_main.id              AS order_id,
		       cir.odd_numbers            ,
		       order_detail.material_name ,
		       cp1.company_name           ,
		       cir.delivery_time          ,
		       cir.shipping_location      ,
		       cir.forwarding_unit        ,
		       cir.shipper                ,
		       cir.shipper_phone_number   ,
		       cir.receiving_time         ,
		       cir.receiving_location     ,
		       cir.consignee              ,
		       cir.receiver               ,
		       cir.receiver_phone         ,
		       cp2.company_name           ,
		       cir.mode_transport
		FROM sh_order AS order_main
		# 连接 order_detail 表
			     LEFT JOIN sh_order_detail AS order_detail ON order_main.id = order_detail.order_id
		# 连接 circulation_data 表
			     LEFT JOIN sh_product_circulation_data AS cir ON order_main.id = cir.order_id
		# 连接 sh_company 表
			     LEFT JOIN sh_company AS cp1 ON order_main.vendor_id = cp1.id
			     LEFT JOIN sh_company AS cp2 ON cir.company_id = cp2.id
		# 查询条件，flag，时间
		WHERE order_main.flag = #{flag}
		<if test="start_time != null">
			AND cir.receiving_time &gt;= #{start_time}
		</if>
		<if test="end_time != null">
			AND cir.receiving_time &lt;= #{end_time}
		</if>;
	</select>

	<!-- 根据模块类型，统计不同品种产品预计上市产量 -->
	<select id="getMarketEstimatesByFlagAndMaterialId" resultType="java.lang.Integer">
        SELECT market_estimate
        FROM sh_material_produce
        WHERE flag = #{flag} AND material_id = #{materialId}
    </select>

	<!--统计不同模块的销售指数-->
	<select id="getSalesPending" resultType="java.util.HashMap">
		SELECT temp2.flag,
		       round(sum(temp2.price_today), 2)     as price_today,
		       round(sum(temp2.price_yesterday), 2) as price_yesterday,
# 		       截取涨幅的第一个字符，如果是 - 则代表涨幅为负，保留负号，否则添加一个正号
		       any_value(if(substr(round(price_today - price_yesterday, 2), 1, 1) = '-',
		                    round(price_today - price_yesterday, 2),
		                    concat('+', round(price_today - price_yesterday, 2)))) as lifting,
		       any_value(temp2.unit) as unit
		FROM (SELECT any_value(temp.flag)                AS flag,
		             temp.material_name                  AS material_name,
		             count(temp.material_name)           AS count,
		             round(sum(temp.price_today), 2)     AS price_today,
		             round(sum(temp.price_yesterday), 2) AS price_yesterday,
		             any_value(temp.unit) as unit

		      FROM (SELECT flag,
		                   product                                                                      as material_name,
		                   region,
		                   price                                                                        as 'price_today',
		                   time,
# 		                   截取涨幅第一个字符，如果是 - 则代表涨幅为负，否则为正
		                   if(substr(lifting, 1, 1) = '-',
# 		                       涨幅为负的情况，使用：今日价格 * ((1 + 涨幅) * 0.01) 算出昨日价格
		                      round(price * (1 + round(substr(lifting, 2, length(lifting) - 2) * 0.01, 4)), 2),
# 		                       涨幅为正的情况，使用：今日价格 * ((100 - 涨幅) * 0.01) 算出昨日价格
                              round(price * round((100 - substr(lifting, 1, length(lifting) - 1)), 2) * 0.01, 2)) AS 'price_yesterday',
		                   lifting,
		                   unit
		            FROM sh_product_price
		            WHERE lifting != '-' AND time = #{date}
		            ORDER BY flag) AS temp
		      GROUP BY temp.material_name
		      ORDER BY flag) AS temp2
		GROUP BY temp2.flag;
	</select>

	<!-- 根据模块类型，统计不同品种产品不同批次产量 -->
	<select id="getBatchProductionByFlagAndMaterialId" resultType="java.math.BigDecimal">
        SELECT production_scale
        FROM sh_material_produce
        WHERE flag = #{flag} AND material_id = #{materialId} AND batch = #{batch}
    </select>

	<!-- 根据模块类型，统计月生产订单数量 -->
	<select id="getOrderCountByFlagAndTimeAndCategory" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM sh_order
		WHERE flag = #{flag}
		AND
		<if test="start_time != null">
			create_time &gt;= #{start_time}
		</if>
		AND
		<if test="end_time != null">
			create_time &lt;= #{end_time}
		</if>
		AND category = #{category}
	</select>

	<!-- 根据模块类型，查询特定产品月生产订单详细信息 -->
	<select id="getOrderDetailsByFlagAndTimeAndMaterialId" resultType="com.arg.smart.web.product.entity.MaterialProduce">
		SELECT *
		FROM sh_material_produce
		WHERE flag = #{flag} AND
		<if test="start_time != null">
			create_time &gt;= #{start_time}
		</if>
		AND
		<if test="end_time != null">
			create_time &lt;= #{end_time}
		</if>
		AND material_id = #{materialId}
	</select>

	<!-- 根据模块类型，统计不同产品生产总额 -->
	<select id="getProductionTotalByFlagAndTimeAndMaterialId" resultType="java.math.BigDecimal">
		SELECT SUM(quantity)
		FROM sh_material_produce
		WHERE flag = #{flag}
		AND
		<if test="start_time != null">
			create_time &gt;= #{start_time}
		</if>
		AND
		<if test="end_time != null">
			create_time &lt;= #{end_time}
		</if>
		AND material_id = #{materialId}
		GROUP BY create_time
	</select>

	<!--根据模块类型及运输企业,统计不同产品月出库量 -->
	<select id="getInventoryQuantityByFlagAndTimeAndMaterialId" resultType="java.lang.Long">
		SELECT SUM(sales_quantity)
		FROM sh_order_Detail, sh_order
		WHERE sh_order_Detail.id = sh_order.id
		IN (SELECT id FROM sh_order WHERE flag = #{flag}
		AND
		<if test="start_time != null">
			create_time &gt;= #{start_time}
		</if>
		AND
		<if test="end_time != null">
			create_time &lt;= #{end_time}
		</if>)
		AND material_id = #{materialId}
	</select>

	<!-- 根据模块类型及产品编号查询月出库订单明细 -->
	<select id="getMonthlyOrderDetailsByFlagAndTimeAndMaterialId" resultType="com.arg.smart.web.order.entity.OrderDetail">
		SELECT *
		FROM sh_order_detail, sh_order
		WHERE sh_order_Detail.id = sh_order.id
		IN (SELECT id FROM sh_order WHERE flag = #{flag}
		AND
		<if test="start_time != null">
			create_time &gt;= #{start_time}
		</if>
		AND
		<if test="end_time != null">
			create_time &lt;= #{end_time}
		</if>)
		AND material_id = #{materialId}
	</select>
</mapper>
