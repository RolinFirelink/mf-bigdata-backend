<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.arg.smart.oauth.mapper.SsoMenuMapper">
    <insert id="insertMenu" parameterType="com.arg.smart.oauth.entity.SsoMenu">
        insert into sso_menu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id, parent_id, client_id,menu_code, menu_level,
            <if test="menuName != null">menu_name,</if>
            <if test="menuIcon != null">menu_icon,</if>
            <if test="menuSort != null">menu_sort,</if>
            <if test="menuType != null">menu_type,</if>
            <if test="routePath != null">route_path,</if>
            <if test="component != null">component,</if>
            <if test="permissions != null">permissions,</if>
            <if test="isExternal != null">is_external,</if>
            <if test="isVisible != null">is_visible,</if>
            <if test="activeMenu != null">active_menu,</if>
            <if test="isKeepalive != null">is_keepalive,</if>
            <if test="remark != null">remark,</if>
            create_by, create_time
        </trim>
        select
        <trim suffixOverrides=",">
            #{id}, #{parentId}, #{clientId},
            CONCAT(pcode,LPAD(SUBSTR(IFNULL((SELECT max( menu_code ) FROM sso_menu WHERE parent_id = #{parentId} ),
            0),(lvl-1)*5+1)+ 1, 5, 0 )),
            lvl,
            <if test="menuName != null">#{menuName},</if>
            <if test="menuIcon != null">#{menuIcon},</if>
            <if test="menuSort != null">#{menuSort},</if>
            <if test="menuType != null">#{menuType},</if>
            <if test="routePath != null">#{routePath},</if>
            <if test="component != null">#{component},</if>
            <if test="permissions != null">#{permissions},</if>
            <if test="isExternal != null">#{isExternal},</if>
            <if test="isVisible != null">#{isVisible},</if>
            <if test="activeMenu != null">#{activeMenu},</if>
            <if test="isKeepalive != null">#{isKeepalive},</if>
            <if test="remark != null">#{remark},</if>
            #{createBy}, now()
        </trim>
        from (select IFNULL(menu_code,'') pcode,IFNULL(menu_level,0)+1 lvl from (SELECT '' FROM dual) d left join
        sso_menu on id = #{parentId}) t
    </insert>
    <sql id="reqCondition">
        <if test="reqSsoMenu.clientId!=null">and m.client_id = #{reqSsoMenu.clientId}</if>
        <if test="reqSsoMenu.menuName != null">and m.menu_name like concat('%',#{reqSsoMenu.menuName},'%')</if>
        <if test="reqSsoMenu.isVisible!=null">and m.is_visible = #{reqSsoMenu.isVisible}</if>
        <if test="reqSsoMenu.permission != null">and m.permissions like concat('%',#{reqSsoMenu.permission},'%')</if>
    </sql>
    <select id="queryMaxMenuLevel" resultType="java.lang.Integer">
        select max(m.menu_level) from sso_menu m
        <include refid="menuJoin"/>
        <where>
            <include refid="reqCondition"/>
        </where>
    </select>
    <sql id="menuJoin">
        <if test="userId != null and  userId != ''">
            inner join sso_role_menu rm on m.id = rm.menu_id
            inner join sso_user_role ur on ur.role_id = rm.role_id and ur.user_id = #{userId}
            inner join sso_role r on r.id = ur.role_id and r.status = 0
        </if>
    </sql>
    <!-- 找到当前菜单及所有他的父菜单 -->
    <select id="queryMenu" resultType="com.arg.smart.oauth.entity.SsoMenu">
        SELECT distinct m.* FROM sso_menu m
        <include refid="menuJoin"/>
        <where>
            <include refid="reqCondition"/>
            <!--查询时是否包含按钮 -->
            <if test="reqSsoMenu.noButton">
                and m.menu_type != 2
            </if>
        </where>
        <foreach collection="levels" item="value">
            UNION
            SELECT m.* FROM sso_menu m
            where menu_code IN (SELECT DISTINCT SUBSTR(menu_code,1,(menu_level-#{value})*5) FROM sso_menu m
            <include refid="menuJoin"/>
            <where>
                <include refid="reqCondition"/>
            </where>
            )
            <!--查询时是否包含按钮 -->
            <if test="reqSsoMenu.noButton">
                and m.menu_type != 2
            </if>
        </foreach>
        order by menu_sort,menu_type
    </select>
    <select id="queryMenuUser" resultType="java.lang.String">
        select distinct ur.user_id
        from sso_menu m
        inner join sso_role_menu rm on m.id = rm.menu_id
        inner join sso_user_role ur on ur.role_id = rm.role_id
        <where>m.id = #{menuId}</where>
    </select>
</mapper>
